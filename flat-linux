#!/usr/bin/env bash
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2018 Dede Dindin Qudsy
#
# Kernel compilation script

###############
#             #
#  FUNCTIONS  #
#             #
###############

# 'cp -v' alias
function cp() {
    command cp -v "${@}"
}

# 'rm -v' alias
function rm() {
    command rm -v "${@}"
}

# Set variables
function generate_variables() {
    # Folders
    SOURCE_FOLDER=${HOME}/local/linux-kernel/linux/
    
    LOCALVERSION="-flat"

    MODEL=$(lscpu | grep "Model name" | sed -r 's/Model name:\s{1,}(.*) CPU .*z\s*/\1/g' | cut -c22-)
    case ${MODEL} in
        3217U)
            DEFCONFIG="flat_laptop_defconfig" ;;

        2500)
            DEFCONFIG="flat_desktop_defconfig" ;;

        *)
            die "Invalid devices" ;;
    esac
}

# Clean up
function clean_up() {
    # Only checkout if kernel_branch exists and we aren't bisecting or rebasing
    cd "${SOURCE_FOLDER}" || die "Kernel source is missing!"
    make clean && make mrproper
}

# Compile kernel
function compile(){
    make ${DEFCONFIG} prepare
    time make "${JOBS_FLAG}"

    # Export kernel version
    KVER=$(cat include/config/kernel.release)
}

# Remove old kernel & modules
function remove_old_kernel() {
    sh -c sudo rm -f /boot/vmlinuz-linux${LOCALVERSION}
    sh -c sudo rm -rf /lib/modules/*${LOCALVERSION}
}

# Install new kernel
function installkernel(){
    sudo make modules_install
    sudo dkms autoinstall -k "${KVER}"
    sh -c sudo cp arch/x86_64/boot/bzImage /boot/vmlinuz-linux${LOCALVERSION}
    sh -c sudo cp System.map /boot/System.map
    sudo mkinitcpio -k "${KVER}" -g /boot/initramfs-linux${LOCALVERSION}.img
}

# shellcheck disable=SC1090
source "$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" || return; pwd)/common"

generate_variables
clean_up
compile
remove_old_kernel
installkernel
