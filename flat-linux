#!/usr/bin/env bash
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2018 Dede Dindin Qudsy
#
# Kernel compilation script

###############
#             #
#  FUNCTIONS  #
#             #
###############

# Set variables
function generate_variables() {
    # Source folders
    SOURCE_FOLDER=${HOME}/local/linux-kernel/linux/

    # Kernel name
    LOCALVERSION="flat"

    # Check on laptop or desktop
    MODEL=$(lscpu | grep "Model name" | sed -r 's/Model name:\s{1,}(.*) CPU .*z\s*/\1/g' | cut -c19-)
    case ${MODEL} in
        i3-3217U)
            DEFCONFIG="flat_laptop_defconfig" ;;

        i5-2500)
            DEFCONFIG="flat_desktop_defconfig" ;;

        *)
            die "Invalid devices" ;;
    esac

    # Check if have dkms
    if command -v dkms > /dev/null 2>&1; then HAVE_DKMS=true; fi
}

# Clean up
function clean_up() {
    # Only cd if kernel source exist
    cd "${SOURCE_FOLDER}" || die "Kernel source is missing!"
    make clean && make mrproper
}

# Compile kernel
function compile(){
    make ${DEFCONFIG} prepare
    make "${JOBS_FLAG}"

    # Export kernel version
    KVER=$(cat include/config/kernel.release)
}

# Remove old kernel & modules
function remove() {
    sudo rm -f /boot/vmlinuz-linux-${LOCALVERSION}
    sudo rm -rf /lib/modules/*${LOCALVERSION}*
}

# Install new kernel
function install(){
    sudo make modules_install
    if [[ -n ${HAVE_DKMS} ]]; then
        sudo dkms autoinstall -k "${KVER}"
    fi
    sudo cp arch/x86_64/boot/bzImage /boot/vmlinuz-linux-${LOCALVERSION}
    sudo cp System.map /boot/System.map
    sudo mkinitcpio -k "${KVER}" -g /boot/initramfs-linux-${LOCALVERSION}.img
}

# Print file info
function ending_info() {
    END=$(date +"%s")
    DURATION=$(format_time "${START}" "${END}")
    echo "${GRN}DURATION: ${DURATION}${RST}"
}

# shellcheck disable=SC1090
source "$(cd "$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")" || return; pwd)/common"

# Start tracking time
START=$(date +"%s")

generate_variables
clean_up
compile
remove
install
ending_info
